/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef ADMINCENTERVIEWBASE_HPP
#define ADMINCENTERVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/admincenter_screen/AdminCenterPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <touchgfx/containers/progress_indicators/TextProgress.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class AdminCenterViewBase : public touchgfx::View<AdminCenterPresenter>
{
public:
    AdminCenterViewBase();
    virtual ~AdminCenterViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void uscerCountButtonClicked()
    {
        // Override and implement this function in AdminCenter
    }

    virtual void deleteAllUserButtonClicked()
    {
        // Override and implement this function in AdminCenter
    }

    virtual void deleteUserButtonClicked()
    {
        // Override and implement this function in AdminCenter
    }

    virtual void verifyUserButtonClicked()
    {
        // Override and implement this function in AdminCenter
    }

    virtual void addUserButtonClicked()
    {
        // Override and implement this function in AdminCenter
    }

    virtual void deactivateAutoVerify()
    {
        // Override and implement this function in AdminCenter
    }

    virtual void activateAutoVerify()
    {
        // Override and implement this function in AdminCenter
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image Cover;
    touchgfx::Button SettingsButton;
    touchgfx::ButtonWithLabel AddUserButton;
    touchgfx::ButtonWithLabel VerifyUserButton;
    touchgfx::ButtonWithLabel DeleteUserButton;
    touchgfx::ButtonWithLabel DeleteAllUser;
    touchgfx::ButtonWithLabel UserCountButton;
    touchgfx::Slider slider1;
    touchgfx::Slider slider2;
    touchgfx::Slider slider3;
    touchgfx::TextProgress textProgress1;
    touchgfx::TextProgress textProgress2;
    touchgfx::TextProgress textProgress3;
    touchgfx::Image fail;
    touchgfx::Image check;
    touchgfx::TextAreaWithOneWildcard textArea1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA1_SIZE = 12;
    touchgfx::Unicode::UnicodeChar textArea1Buffer[TEXTAREA1_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<AdminCenterViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<AdminCenterViewBase, const touchgfx::Slider&, int> sliderValueChangedCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value);

};

#endif // ADMINCENTERVIEWBASE_HPP
